---
apiVersion: kubeadm.k8s.io/v1beta1
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: "{{ ansible_default_ipv4.address }}"
  bindPort: 6443
nodeRegistration:
  name: "{{ hostvars[inventory_hostname]['ansible_hostname'] }}"
---
apiVersion: kubeadm.k8s.io/v1beta1
kind: ClusterConfiguration
apiServer:
  extraArgs:
    audit-log-path: "{{ kubernetes.auditPolicy.logDir }}/audit.log"
    audit-log-maxage: "{{ kubernetes.auditPolicy.logMaxAge }}"
certificatesDir: /etc/kubernetes/pki
controlPlaneEndpoint: "{{ kubernetes.apiServer.loadBalancer.ip }}:6443"
dns:
  type: "{{ kubernetes.dns.type }}"
  imageRepository: "{{ kubernetes.dns.image.repo }}"
  imageTag: "{{ kubernetes.dns.image.tag }}"
etcd:
  local:
    dataDir: /var/lib/etcd
kubernetesVersion: "v{{ kubernetes.version }}"
networking:
  dnsDomain: "{{ kubernetes.network.dns.domain }}"
  podSubnet: "{{ kubernetes.network.pods.cidr }}"
  serviceSubnet: "{{ kubernetes.network.services.cidr }}"
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
clusterDNS:
- "{{ kubernetes.network.dns.serviceIP }}"
clusterDomain: "{{ kubernetes.network.dns.domain }}"
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
bindAddress: 0.0.0.0
clusterCIDR: "{{ kubernetes.network.pods.cidr }}"
enableProfiling: False
healthzBindAddress: 0.0.0.0:10256
iptables:
 masqueradeAll: False
 masqueradeBit: 14
 minSyncPeriod: 0s
 syncPeriod: 30s
ipvs:
 excludeCIDRs: null
 minSyncPeriod: 0s
 scheduler: rr
 syncPeriod: 30s
metricsBindAddress: 127.0.0.1:10249
mode: ipvs
