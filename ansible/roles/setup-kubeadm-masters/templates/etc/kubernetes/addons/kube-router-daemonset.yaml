---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    k8s-app: kube-router
    tier: node
  name: kube-router
  namespace: kube-system
spec:
  template:
    metadata:
      labels:
        k8s-app: kube-router
        tier: node
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      serviceAccountName: kube-router
      containers:
      - name: kube-router
        image: cloudnativelabs/kube-router
        imagePullPolicy: Always
        args:
        - "--run-router=true"
        - "--run-firewall=true"
        - "--run-service-proxy=true"
        - "--enable-pod-egress=false"
        - "--enable-cni=true"
        - "--enable-ibgp=true"
        - "--enable-overlay=false"
        - "--peer-router-ips=10.3.5.1"
        - "--peer-router-asns=64567"
        - "--cluster-asn=64512"
        - "--advertise-cluster-ip=true"
        - "--advertise-external-ip=true"
        - "--advertise-loadbalancer-ip=true"
        - "--routes-sync-period=60s"
        - "--hairpin-mode=true"
        - "--kubeconfig=/var/lib/kube-proxy/kubeconfig.conf"
        - "--metrics-path=/metrics"
        - "--metrics-port=8080"
        - "--iptables-sync-period=60s"
        - "--ipvs-sync-period=60s"
        - "--master=https://{{ kubernetes.apiServer.loadBalancer.ip }}:{{ kubernetes.apiServer.loadBalancer.port }}/"
        - "-v=2"
        env:
        - name: KUBE_ROUTER_CNI_CONF_FILE
          value: "{{ kubernetes.cni.paths.conf }}/10-kuberouter.conflist"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        livenessProbe:
          httpGet:
            path: /healthz
            port: 20244
          initialDelaySeconds: 10
          periodSeconds: 3
        resources:
          requests:
            cpu: 250m
            memory: 250Mi
        securityContext:
          privileged: true
          seLinuxOptions:
            type: spc_t
        volumeMounts:
        - mountPath: "{{ kubernetes.cni.paths.conf }}"
          name: cni
        - mountPath: /lib/modules
          name: modules
        - mountPath: /var/lib/kube-proxy
          name: kube-proxy
      volumes:
      - hostPath:
          path: "{{ kubernetes.cni.paths.conf }}"
          type: DirectoryOrCreate
        name: cni
      - hostPath:
          path: /lib/modules
          type: DirectoryOrCreate
        name: modules
      - configMap:
          defaultMode: 420
          name: kube-proxy
        name: kube-proxy
      hostNetwork: true
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
